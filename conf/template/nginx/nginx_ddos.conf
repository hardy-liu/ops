user			nginx nginx;
worker_processes	auto;

error_log		/data/log/nginx/error.log error;
pid			/opt/run/nginx.pid;

pcre_jit		on;

events {
    use			epoll;
    worker_connections  100000;
#    accept_mutex	off;
}

http {
    include		mime.types;
    access_log		off;
    default_type	application/octet-stream;

    log_format  	main	'[$time_local] $hostname $remote_addr $remote_user $host "$request" '
				'$status $body_bytes_sent $content_length $ssl_protocol $ssl_cipher "$http_x_forwarded_for" '
				'$upstream_addr $upstream_status $upstream_cache_status "$upstream_http_last_modified" "$upstream_http_cache_control" "$upstream_http_expires" '
				'"$upstream_http_etag" $request_time "$upstream_response_time" "$http_referer" "$http_user_agent"';
    log_format		default	'$remote_addr $host $hostname $remote_user [$time_local] "$request" '
				'$status $body_bytes_sent "$http_referer" '
				'"$http_user_agent" "$http_x_forwarded_for" "$http_cookie" $upstream_cache_status';

    log_format		nginx	'$remote_addr - $remote_user [$time_local] "$request" '
				'$status $body_bytes_sent "$http_referer" '
				'"$http_user_agent" "$http_x_forwarded_for"';

    server_names_hash_max_size		2048;
    server_names_hash_bucket_size	512;
    client_header_buffer_size		4k;
    large_client_header_buffers		4 32k;
    underscores_in_headers		on;

#    server_tokens			off;
    sendfile				on;
    tcp_nopush				on;
    tcp_nodelay				on;
    keepalive_timeout			120;
    client_max_body_size		128m;

    include				gzip.conf;

    lua_package_path			"/opt/etc/nginx/ccdefence/?.lua";
    lua_shared_dict			guard_dict 100m;
    lua_shared_dict			dict_captcha 70m;
    init_by_lua_file			'/opt/etc/nginx/ccdefence/init.lua';
    access_by_lua_file			'/opt/etc/nginx/ccdefence/runtime.lua';
    lua_max_running_timers		1;

    limit_conn_zone $server_name zone=servers:10m;
    limit_conn_zone $binary_remote_addr zone=addr:32m;
    limit_req_zone $binary_remote_addr zone=req_addr:64m rate=50r/m;

    vhost_traffic_status_zone;

    server {
        listen				127.0.0.1:80;
        server_name			localhost;
        access_log			/data/log/nginx/default.access.log main;

        location / {
            root			html;
            index			index.html index.htm;
            location /status {
                vhost_traffic_status_display;
                vhost_traffic_status_display_format html;
                access_log off;
            }
            location /nstatus {
                check_status;
                access_log off;
            }

            location ~ ^/(phpfpm-status)$ {
                include fastcgi_params;
                fastcgi_pass   127.0.0.1:9000;
                fastcgi_param  SCRIPT_FILENAME  $fastcgi_script_name;
             }
        }

        error_page			500 502 503 504  /50x.html;
        location = /50x.html {
            root			html;
        }
    }

include vhosts/*conf;
include vhosts/vender/*conf;
}
